name: $(Date:yyyyMMdd)$(Rev:.r)
variables:
- group: terraform_variables

resources:
  containers: 
  repositories:

trigger:
- master

pr:
- develop
- master 



stages:
- stage: Docker_Build
  displayName: Build Container for pipeline
  jobs:
  - job:
    pool:
      vmImage: 'ubuntu-16.04'
    steps:
    - task: Docker@2
      inputs:
        containerRegistry: 'kuhlman-labs-container-registry'
        repository: 'pipeline'
        command: 'buildAndPush'
        Dockerfile: '**/Dockerfile'  
        
- stage: Terraform_Validate
  displayName: Check Terraform for format and validation
  jobs:
  - job: Install_Terraform
    pool:
      vmImage: 'ubuntu-16.04'
    steps:
    - task: Bash@3  
      inputs:
        filePath: './scripts/bash/pipeline/install_terraform.sh'
    - script: terraform --version 
  - job: Format_Terraform
    pool:
      vmImage: 'ubuntu-16.04'
    steps:
      - script: terraform fmt -check -list=true 
    dependsOn: Install_Terraform 
  - job: Validate_Terraform
    pool:
      vmImage: 'ubuntu-16.04'
    steps:  
    - task: Bash@3  
      inputs:
        filePath: './scripts/bash/pipeline/validate_terraform.sh'
    dependsOn: Install_Terraform     

- stage: Terraform_Apply
  displayName: Run Terraform apply for solutions 
  jobs:
  - job: Apply_Terraform
    pool:
      vmImage: 'ubuntu-16.04'
    steps:  
    - task: Bash@3  
      inputs:
        filePath: './scripts/bash/pipeline/plan-apply.sh'
  dependsOn: Validate_Terraform

- stage: Terraform_Destroy
  displayName: Run Terraform Destroy for solutions 
  jobs:
  - job: Destroy_Terraform
    pool:
      vmImage: 'ubuntu-16.04'
    steps:  
    - task: Bash@3  
      inputs:
        filePath: './scripts/bash/pipeline/destroy.sh'
  dependsOn: Terraform_Apply   
      