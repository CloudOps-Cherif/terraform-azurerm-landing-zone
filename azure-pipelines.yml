name: $(Date:yyyyMMdd)$(Rev:.r)
variables:
- group: terraform_variables

trigger:
- master

stages:
- stage: Install_Terraform
  displayName: Install Terraform 0.11.14 on build agent and add to $PATH
  jobs:
  - job: Installing_Terraform
    pool:
      vmImage: 'ubuntu-16.04'
    steps:
    - task: Bash@3  
      inputs:
        filePath: './scripts/bash/pipeline/install_terraform.sh'
    - script: terraform --version 

- stage: Format_Check_Terraform
  displayName: Run a format check on configuration files to match canonical format and style
  jobs:
  - job: Format_Terraform
    pool:
      vmImage: 'ubuntu-16.04'
    steps:
      - script: terraform fmt -check -list=true 
  dependsOn: Install_Terraform 
  
- stage: Validate_Terraform
  displayName: Validate the syntax of the terraform files 
  jobs:
  - job: Validating_Terraform_Code
    pool:
      vmImage: 'ubuntu-16.04'
    steps:  
    - task: Bash@3  
      inputs:
        filePath: './scripts/bash/pipeline/validate_terraform.sh'
  dependsOn: Install_Terraform     

- stage: Terraform_Apply
  displayName: Run Terraform apply for solutions 
  jobs:
  - job: Apply
    pool:
      vmImage: 'ubuntu-16.04'
    steps:  
    - task: Bash@3  
      inputs:
        filePath: './scripts/bash/pipeline/plan-apply.sh'
  dependsOn: [Validate_Terraform, Format_Check_Terraform] 

- stage: Terraform_Destroy
  displayName: Run Terraform Destroy for solutions 
  jobs:
  - job: Destroy
    pool:
      vmImage: 'ubuntu-16.04'
    steps:  
    - task: Bash@3  
      inputs:
        filePath: './scripts/bash/pipeline/destroy.sh'
  dependsOn: Terraform_Apply   
      